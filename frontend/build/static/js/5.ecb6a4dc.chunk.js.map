{"version":3,"sources":["components/modules/Ledgers.module.css","components/utils/Columns.js","components/utils/TableStyles.js","components/utils/GlobalFilter.js","components/content-components/Ledgers.js"],"names":["module","exports","tablebtndiv","btngrp","COLUMNS","Header","Footer","accessor","Styles","styled","div","_templateObject","Object","taggedTemplateLiteral","GlobalFilter","_ref","filter","setFilter","_useState","useState","_useState2","slicedToArray","value","setValue","onChange","useAsyncDebounce","undefined","react_default","a","createElement","e","target","Ledgers","columns","useMemo","data","MOCK_DATA","_postData","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","console","log","axios","post","t0","stop","apply","this","arguments","_useTable","useTable","initialState","pageIndex","useFilters","useGlobalFilter","useSortBy","useSticky","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","state","gotoPage","pageCount","setPageSize","setGlobalFilter","prepareRow","pageSize","globalFilter","Fragment","Suspense","fallback","Spinner","Table","assign","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","Style","ButtonGroup","OverlayTrigger","key","placement","overlay","Tooltip","Button","variant","onClick","disabled","length","type","defaultValue","pageNumber","Number","GlobalFilter_GlobalFilter","event","postData"],"mappings":"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","file":"static/js/5.ecb6a4dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablebtndiv\":\"Ledgers_tablebtndiv__4iHI1\",\"btngrp\":\"Ledgers_btngrp__2gaRI\"};","// import {AccountNoValidator,AmountValidator,DateValidator,DebitCreditValidator,IdValidator,ParticularValidator} from \"./Validation\"\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'Id',\r\n        Footer: 'Id',\r\n        accessor: 'id',\r\n        // Cell : IdValidator\r\n    },\r\n    {\r\n        Header: 'Particular',\r\n        Footer: 'Particular',\r\n        accessor: 'particular',\r\n        // Cell: ParticularValidator\r\n    },\r\n    {\r\n        Header: 'Debit/Credit',\r\n        Footer: 'Debit/Credit',\r\n        accessor: 'debit-credit',\r\n        // Cell : DebitCreditValidator\r\n    },\r\n    {\r\n        Header: 'AccountNo',\r\n        Footer: 'AccountNo',\r\n        accessor: 'accountno',\r\n        // Cell : AccountNoValidator\r\n    },\r\n    {\r\n        Header: 'Amount',\r\n        Footer: 'Amount',\r\n        accessor: 'amount',\r\n        // Cell : AmountValidator\r\n    },\r\n    {\r\n        Header: 'Date',\r\n        Footer: 'Date',\r\n        accessor: 'date',\r\n        // Cell : DateValidator\r\n    }\r\n]\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const Styles = styled.div`\r\n.table {\r\n  border: 1px solid #ddd;\r\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n}\r\n`\r\n// tr {\r\n//   :last-child {\r\n//     .td {\r\n//       border-bottom: 0;\r\n//     }\r\n//   }\r\n// }\r\n\r\n// .th,\r\n// .td {\r\n//   padding: 20px;\r\n//   border-bottom: 1px solid #ddd;\r\n//   border-right: 1px solid #ddd;\r\n//   overflow: hidden;\r\n//   display: flex;\r\n//   justify-content : center;\r\n//   text-align: center;\r\n\r\n//   :last-child {\r\n//     border-right: 0;\r\n//   }\r\n// }\r\n\r\n// &.sticky {\r\n//   overflow: scroll;\r\n//   .header,\r\n//   .footer {\r\n//     position: sticky;\r\n//     z-index: 1;\r\n//     width: fit-content;\r\n//   }\r\n\r\n//   .header {\r\n//     top: 0;\r\n//     color: white;\r\n//     background-color : #003180;\r\n//     box-shadow: 0px 3px 3px #ccc;\r\n//   }\r\n\r\n//   .footer {\r\n//     bottom: 0;\r\n//     box-shadow: 0px -3px 3px #ccc;\r\n//   }\r\n\r\n//   .body {\r\n//     position: relative;\r\n//     z-index: 0;\r\n//   }\r\n\r\n//   [data-sticky-td] {\r\n//     position: sticky;\r\n//   }\r\n\r\n//   [data-sticky-last-left-td] {\r\n//     box-shadow: 2px 0px 3px #ccc;\r\n//   }\r\n\r\n//   [data-sticky-first-right-td] {\r\n//     box-shadow: -2px 0px 3px #ccc;\r\n//   }\r\n// }","import React, { useState } from 'react'\r\nimport { useAsyncDebounce } from 'react-table'\r\n\r\nexport const GlobalFilter = ({ filter, setFilter }) => {\r\n  const [value, setValue] = useState(filter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setFilter(value || undefined)\r\n  }, 1000)\r\n  return (\r\n    <span>\r\n      Search:{' '}\r\n      <input\r\n        value={value || ''}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n      />\r\n    </span>\r\n  )\r\n}\r\n","import React, { useMemo ,startTransition} from 'react'\r\nimport Style from \"./../modules/Ledgers.module.css\"\r\nimport { Button, ButtonGroup, OverlayTrigger, Spinner, Table, Tooltip } from \"react-bootstrap\"\r\nimport MOCK_DATA from \"./../assets/MOCK_DATA.json\"\r\nimport { COLUMNS } from \"./../utils/Columns.js\"\r\nimport { useFilters, useGlobalFilter, usePagination, useTable, useSortBy } from 'react-table'\r\nimport { useSticky } from 'react-table-sticky'\r\nimport { Styles } from \"./../utils/TableStyles\"\r\n\r\nimport { GlobalFilter } from \"./../utils/GlobalFilter\"\r\nimport axios from 'axios'\r\n\r\nexport default function Ledgers() {\r\n  const columns = useMemo(() => COLUMNS, [])\r\n  const data = useMemo(() => MOCK_DATA, [])\r\n\r\n  async function postData() {\r\n    console.log(\"Post Data Test function called\");\r\n\r\n    try {\r\n     await axios.post(\"http://localhost:3001/postdata\",\"some data from frontend\");\r\n    }catch(error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const style1={\r\n    \"margin\":\"30px\"\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    prepareRow\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 }\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    useSticky,\r\n    usePagination\r\n  )\r\n\r\n  const { pageIndex, pageSize, globalFilter } = state\r\n\r\n\r\n  return (\r\n    <>\r\n    <React.Suspense fallback={<Spinner />}>\r\n      <div>\r\n        <Styles>\r\n          <Table {...getTableProps()} className='table sticky'>\r\n            <thead className='header'>\r\n              {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map(column => (\r\n                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? '🔽'\r\n                            : '🔼'\r\n                          : ''}\r\n                      </span>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()} className='body'>\r\n              {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    })}\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n          <div className={Style.tablebtndiv}>\r\n            <ButtonGroup className={Style.btngrp}>\r\n              <OverlayTrigger key='top'\r\n                placement='top'\r\n                overlay={\r\n                  <Tooltip>\r\n                    Go to First Page\r\n                  </Tooltip>\r\n                }>\r\n                <Button variant='secondary' onClick={() => gotoPage(0)} disabled={!canPreviousPage} >{'First'}</Button>\r\n              </OverlayTrigger>\r\n              <OverlayTrigger key='top'\r\n                placement='top'\r\n                overlay={\r\n                  <Tooltip>\r\n                    Go to Previous Page\r\n                  </Tooltip>\r\n                }>\r\n                <Button variant='secondary' onClick={() => previousPage()} disabled={!canPreviousPage}>{'Previous'}</Button>\r\n              </OverlayTrigger>\r\n              <OverlayTrigger key='top'\r\n                placement='top'\r\n                overlay={\r\n                  <Tooltip>\r\n                    Go to Next Page\r\n                  </Tooltip>\r\n                }>\r\n                <Button variant='secondary' onClick={() => nextPage()} disabled={!canNextPage}>{'Next'}</Button>\r\n              </OverlayTrigger>\r\n              <OverlayTrigger key='top'\r\n                placement='top'\r\n                overlay={\r\n                  <Tooltip>\r\n                    Go to Last Page\r\n                  </Tooltip>\r\n                }>\r\n                <Button variant='secondary' onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{'Last'}</Button>\r\n              </OverlayTrigger>\r\n            </ButtonGroup>\r\n              <span>\r\n            <span>\r\n              Page{' '}\r\n              <strong>\r\n                {pageIndex + 1} of {pageOptions.length}\r\n              </strong>\r\n            </span>\r\n            <span>\r\n              | Go to page:{' '}\r\n              <input\r\n                type='number'\r\n                defaultValue={pageIndex + 1}\r\n                onChange={e => {\r\n                  const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\r\n                  gotoPage(pageNumber)\r\n                }}\r\n              />\r\n            </span>{' '}\r\n            <span>\r\n            <select\r\n              value={pageSize}\r\n              onChange={e => setPageSize(Number(e.target.value))}>\r\n              {[10, 15, 20, 30, 50, 100].map(pageSize => (\r\n                <option key={pageSize} value={pageSize}>\r\n                  Show {pageSize}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            </span>\r\n            </span>\r\n          </div>\r\n        </Styles>\r\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n        <div>\r\n          <OverlayTrigger\r\n            placement='right'\r\n            overlay={\r\n              <Tooltip>\r\n                Insert new data row\r\n              </Tooltip>\r\n            }>\r\n            <Button variant='primary' onClick={(event)=>{\r\n        console.log(\"Add Data Clicked\");\r\n        postData();\r\n      }}>Add Data</Button>\r\n          </OverlayTrigger>\r\n        </div>\r\n      </div>\r\n      </React.Suspense>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}